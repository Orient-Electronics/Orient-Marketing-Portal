<%= form_for @shop, :html => { :class => 'form-horizontal shop_form form-validate' , :multipart => true }  do |f| %>
  <div class= "error-box">
    <p><%= errors_for(@shop, "").html_safe %></p>
  </div>

  <h3> Shop Logo </h3>
  <%= f.fields_for :avatar do |f| %>
    
    <div class= "control-group">
      <%= f.label "Icon", :id => :avatar, :class => 'control-label'%>
      <div class="controls">
        <%= f.file_field :avatar ,:class => 'avatar_field required' %>
      </div>
    </div>
  <%end%> 

  <%= f.fields_for :location do |f| %>
    <div class="control-group">
      <%= f.label :city_id, :class => 'control-label' %>
      <div class="controls">
        <%= f.collection_select :city_id, City.all,:id,:name, include_blank: true, :class => 'required' %>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :area, :class => 'control-label' %>
      <div class="controls">
        <%= f.text_field :area, :class => 'text_field required' %>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :longitude, :class => 'control-label' %>
      <div class="controls">
        <%= f.text_field :longitude, :class => 'text_field required number', :id => 'lng' %>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :latitude, :class => 'control-label' %>
      <div class="controls">
        <%= f.text_field :latitude, :class => 'text_field required number', :id => 'lat' %>
      </div>
    </div>

    <div class="control-group">
      <%= label_tag "","", :class => 'control-label' %>
      <div class="controls">
        <div class=="row-fluid">
          <div id="location_canvas" class="span6" style="height:300px;">
          </div>
        </div>
        <div class="clearfix"></div>
        <br>
        <%= check_box_tag "", "", false, id: "confirm_pin", :class => 'pull-left required' %>
        <%= label_tag "confirm_pin", " Confirm this location" %>
      </div>
    </div>

  <% end -%>

  <div class="control-group">
    <%= f.label :dealer_name,"Shop Name", :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :dealer_name, :class => 'text_field required' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :branch_of,"Dealer Name", :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :branch_of, :class => 'text_field typeahead required' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :phone, :class => 'control-label' %>
    <div class="controls">
      <%= f.number_field :phone, :class => 'number_field required number' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :website, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :website, :class => 'text_field required' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :email, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :email, :class => 'text_field required email' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :address, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :address, :class => 'text_field required' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :orient_dealer, :class => 'control-label' %>
    <div class="controls">
      <%= f.check_box :orient_dealer, :class => 'check_box required' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :shop_category_id, :class => 'control-label' %>
    <div class="controls shop-category">
      <%= f.collection_select :shop_category_id, ShopCategory.all,:id,:name, include_blank: true, :class => 'required' %>
    </div>
  </div>

  <h3>Owner Information</h3>

  <%= f.fields_for :owner do |f| %>
    <div class="control-group">
      <%= f.label :name, :class => 'control-label' %>
      <div class="controls">
        <%= f.text_field :name, :class => 'text_field required' %>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :cell_number, :class => 'control-label' %>
      <div class="controls">
        <%= f.text_field :cell_number, :class => 'text_field required number
' %>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :dob,"Date of Birth", :class => 'control-label' %>
      <div class="controls">
        <div class="input-append date datepicker" data-date-format="dd-mm-yyyy">
          <%= f.text_field :dob, :readonly => true %><span class="add-on"><i class="icon-th"></i></span>
        </div>
      </div>
    </div>
  <% end -%>
  
  <h3>Manager Information</h3>

  <%= f.fields_for :manager do |f| %>
    <div class="control-group">
      <%= f.label :name, :class => 'control-label' %>
      <div class="controls">
        <%= f.text_field :name, :class => 'text_field required' %>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :cell_number, :class => 'control-label' %>
      <div class="controls">
        <%= f.text_field :cell_number, :class => 'text_field required number' %>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :dob,"Date of Birth", :class => 'control-label' %>
      <div class="controls">
        <div class="input-append date datepicker" data-date-format="dd-mm-yyyy">
          <%= f.text_field :dob, :readonly => true %><span class="add-on"><i class="icon-th"></i></span>
        </div>
      </div>
    </div>
  <% end -%>

  <div class="form-actions">
    <%= f.submit nil, :class => 'btn btn-primary' %>
    <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                shops_path, :class => 'btn' %>
  </div>
<% end %>

<%= content_for :footer_js do %>
<script type="text/javascript" charset="utf-8">
  var map;
  var markersArray = [];

  function initialize(lat,lng){
    pos = (lat + ",") + lng;
    var mapOptions = {
      'center': (new google.maps.LatLng(lat,lng)),
      zoom: 16,
      'disableDefaultUI':true
    };
    map = new google.maps.Map($("#location_canvas")[0], mapOptions);
    addMarker(new google.maps.LatLng(lat,lng));

  }

  function setgeolocation(address){
    geocoder = new google.maps.Geocoder();
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK)
      {
          lat = results[0].geometry.location.lat();
          lng = results[0].geometry.location.lng();
          initialize(lat,lng)
      }
    });
  }

  function addMarker(location) {
    marker = new google.maps.Marker({
      position: location,
      map: map,
      'raiseOnDrag': true,
      'crossOnDrag': false,
      'draggable': true
    });
    point = marker.position;
    $("#lat").val(point.lat().toFixed(5));
    $("#lng").val(point.lng().toFixed(5));
    marker.addListener("dragend", function(marker, ev) {
      point = marker.latLng;
      $("#lat").val(point.lat().toFixed(5));
      $("#lng").val(point.lng().toFixed(5));
    });
    markersArray.push(marker);
  }

  function deleteOverlays() {
    if (markersArray) {
      for (i in markersArray) {
        markersArray[i].setMap(null);
      }
      markersArray.length = 0;
    }
  }

  function isNumber(o) {
    return !isNaN(o - 0);
  }

  function convert(c) {
      if (isNumber(c))
          return Number(c);

      var match = false;
      var points = {
          sign: 1,
          degree: 0,
          min: 0,
          sec: 0
      };

      var MinDec = /^([NWES+-])*(\d+)°(\d+).(\d+)'/i; // 067°08.601', -067°08.601', E067°08.601'
      var DMS = /^([NWES+-])*(\d+)°(\d+)'(\d+)\.?(\d+)*"/i; // 33°36'47", -33°36'47", N33°36'47"

      if (c.match(MinDec)) {
          var arr = MinDec.exec(c);

          match = true;
          points.sign = (arr[1] == 'W' || arr[1] == 'S' || arr[1] == '-') ? -1 : 1;
          points.degree = Number(arr[2]);
          points.min = Number(arr[3] + '.' + arr[4]);
      }
      else if (c.match(DMS)) {
          var arr = DMS.exec(c);

          match = true;
          points.sign = (arr[1] == 'W' || arr[1] == 'S' || arr[1] == '-') ? -1 : 1;
          points.degree = Number(arr[2]);
          points.min = Number(arr[3]);
          points.sec = Number(arr[4] + '.' + arr[5]);
      }

      if (match) {
          return (points.degree + ((points.min * 60 + points.sec) / 3600)) * points.sign;
      }

      return false;
  }

  $('document').ready(function () {
    
    if(($("#lat").val()=="")||($("#lng").val()==""))
      setgeolocation("Pakistan");
    else{
      lat = convert($("#lat").val());
      lng = convert($("#lng").val());
      if(lat &&  lng)
        initialize(lat,lng);
      else{
        $("#lat").val("");
        $("#lng").val("");
      }
    }

    $("#shop_location_attributes_city_id").change(function(){
      if($(this).val()!=""){
        address = $("#shop_location_attributes_city_id option:selected").text() + ', Pakistan';
        setgeolocation(address);
      }
    });
    $("#lat,#lng").blur(function(){
      if(($("#lat").val()!="")&&($("#lng").val()!="")){
        lat = convert($("#lat").val());
        lng = convert($("#lng").val());
        if(lat &&  lng)
          initialize(lat,lng);
        else{
          $("#lat").val("");
          $("#lng").val("");
        }
      }
    });

    //auto complete for dealer name
    $('.typeahead').typeahead({                                
      name: 'dealers',
      local: '<%= Dealer.all.collect{|c| c.name}.join("*") %>'.split("*"),
      limit: 10                                                                   
    });

  });
</script>
<% end -%>